services:
  # MongoDB Database Service
  mongodb:
    image: mongo:latest
    container_name: acc-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - acc_mongodb_data:/data/db
      - acc_mongodb_config:/data/configdb
    networks:
      - acc-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 40s

  # Redis Cache Service
  redis:
    image: redis:latest
    container_name: acc-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - acc_redis_data:/data
    networks:
      - acc-network
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 3

  # MinIO S3-Compatible Object Storage
  minio:
    image: minio/minio:latest
    container_name: acc-minio
    restart: unless-stopped
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console
    volumes:
      - acc_minio_data:/data
    networks:
      - acc-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 30s
      retries: 3

  # Optional: MongoDB Express (Database Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: acc-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    ports:
      - "8081:8081"
    networks:
      - acc-network
    depends_on:
      mongodb:
        condition: service_healthy
    profiles:
      - tools

  # Optional: Redis Commander (Redis Admin UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: acc-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    networks:
      - acc-network
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - tools

# Named volumes for persistent storage
volumes:
  acc_mongodb_data:
    driver: local
  acc_mongodb_config:
    driver: local
  acc_redis_data:
    driver: local
  acc_minio_data:
    driver: local

# Custom network for service communication
networks:
  acc-network:
    driver: bridge
